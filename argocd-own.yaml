kind: Deployment
apiVersion: apps/v1
metadata:
  name: argocd-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: argocd-redis
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      serviceAccountName: argocd-argocd-redis
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: redis
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsUser: 999
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 6379
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: argocd-operator-redis-tls
              mountPath: /app/config/redis/tls
          terminationMessagePolicy: File
          image: 'redis@sha256:8061ca607db2a0c80010aeb5fc9bed0253448bc68711eaa14253a392f6c48280'
          args:
            - '--save'
            - ''
            - '--appendonly'
            - 'no'
      serviceAccount: argocd-argocd-redis
      volumes:
        - name: argocd-operator-redis-tls
          secret:
            secretName: argocd-operator-redis-tls
            defaultMode: 420
            optional: true
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  name: argocd-repo-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-repo-server
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: argocd-repo-server
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      initContainers:
        - resources:
            limits:
              cpu: '1'
              ephemeral-storage: 512Mi
              memory: 1Gi
            requests:
              cpu: 100m
              ephemeral-storage: 256Mi
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          name: copyutil
          command:
            - cp
            - '-n'
            - /usr/local/bin/argocd
            - /var/run/argocd/argocd-cmp-server
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          volumeMounts:
            - name: var-files
              mountPath: /var/run/argocd
          terminationMessagePolicy: File
          image: 'quay.io/argoproj/argocd@sha256:83c86003b781d43d5a02a4fe80cec7f7a249e90ec07b72a9af6f9a6538e468ff'
      serviceAccountName: argocd-argocd-server
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - resources:
            limits:
              cpu: '1'
              ephemeral-storage: 512Mi
              memory: 1Gi
            requests:
              cpu: 100m
              ephemeral-storage: 256Mi
              memory: 128Mi
          readinessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: argocd-repo-server
          command:
            - uid_entrypoint.sh
            - argocd-repo-server
            - '--redis'
            - 'argocd-redis.own-argocd.svc.cluster.local:6379'
            - '--loglevel'
            - Debug
            - '--logformat'
            - text
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          ports:
            - name: server
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8084
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: ssh-known-hosts
              mountPath: /app/config/ssh
            - name: tls-certs
              mountPath: /app/config/tls
            - name: gpg-keys
              mountPath: /app/config/gpg/source
            - name: gpg-keyring
              mountPath: /app/config/gpg/keys
            - name: tmp
              mountPath: /tmp
            - name: argocd-repo-server-tls
              mountPath: /app/config/reposerver/tls
            - name: argocd-operator-redis-tls
              mountPath: /app/config/reposerver/tls/redis
            - name: plugins
              mountPath: /home/argocd/cmp-server/plugins
          terminationMessagePolicy: File
          image: 'quay.io/argoproj/argocd@sha256:83c86003b781d43d5a02a4fe80cec7f7a249e90ec07b72a9af6f9a6538e468ff'
      automountServiceAccountToken: true
      serviceAccount: argocd-argocd-server
      volumes:
        - name: ssh-known-hosts
          configMap:
            name: argocd-ssh-known-hosts-cm
            defaultMode: 420
        - name: tls-certs
          configMap:
            name: argocd-tls-certs-cm
            defaultMode: 420
        - name: gpg-keys
          configMap:
            name: argocd-gpg-keys-cm
            defaultMode: 420
        - name: gpg-keyring
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: argocd-repo-server-tls
          secret:
            secretName: argocd-repo-server-tls
            defaultMode: 420
            optional: true
        - name: argocd-operator-redis-tls
          secret:
            secretName: argocd-operator-redis-tls
            defaultMode: 420
            optional: true
        - name: var-files
          emptyDir: {}
        - name: plugins
          emptyDir: {}
        - name: cmp-plugin
          configMap:
            name: cmp-plugin
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: argocd-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: argocd-server
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      serviceAccountName: argocd-argocd-server
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: argocd-server
          command:
            - argocd-server
            - '--insecure'
            - '--staticassets'
            - /shared/app
            - '--dex-server'
            - 'https://argocd-dex-server.own-argocd.svc.cluster.local:5556'
            - '--repo-server'
            - 'argocd-repo-server.own-argocd.svc.cluster.local:8081'
            - '--redis'
            - 'argocd-redis.own-argocd.svc.cluster.local:6379'
            - '--loglevel'
            - info
            - '--logformat'
            - text
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8083
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: ssh-known-hosts
              mountPath: /app/config/ssh
            - name: tls-certs
              mountPath: /app/config/tls
            - name: argocd-repo-server-tls
              mountPath: /app/config/server/tls
            - name: argocd-operator-redis-tls
              mountPath: /app/config/server/tls/redis
          terminationMessagePolicy: File
          image: 'quay.io/argoproj/argocd@sha256:83c86003b781d43d5a02a4fe80cec7f7a249e90ec07b72a9af6f9a6538e468ff'
      serviceAccount: argocd-argocd-server
      volumes:
        - name: ssh-known-hosts
          configMap:
            name: argocd-ssh-known-hosts-cm
            defaultMode: 420
        - name: tls-certs
          configMap:
            name: argocd-tls-certs-cm
            defaultMode: 420
        - name: argocd-repo-server-tls
          secret:
            secretName: argocd-repo-server-tls
            defaultMode: 420
            optional: true
        - name: argocd-operator-redis-tls
          secret:
            secretName: argocd-operator-redis-tls
            defaultMode: 420
            optional: true
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: argocd-application-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: argocd-application-controller
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      serviceAccountName: argocd-argocd-application-controller
      schedulerName: default-scheduler
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-argocd-application-controller
                topologyKey: kubernetes.io/hostname
            - weight: 5
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: 20m
              memory: 256Mi
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: argocd-application-controller
          command:
            - argocd-application-controller
            - '--operation-processors'
            - '10'
            - '--redis'
            - 'argocd-redis.own-argocd.svc.cluster.local:6379'
            - '--repo-server'
            - 'argocd-repo-server.own-argocd.svc.cluster.local:8081'
            - '--status-processors'
            - '20'
            - '--kubectl-parallelism-limit'
            - '10'
            - '--loglevel'
            - info
            - '--logformat'
            - text
          env:
            - name: HOME
              value: /home/argocd
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8082
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: argocd-repo-server-tls
              mountPath: /app/config/controller/tls
            - name: argocd-operator-redis-tls
              mountPath: /app/config/controller/tls/redis
          terminationMessagePolicy: File
          image: 'quay.io/argoproj/argocd@sha256:83c86003b781d43d5a02a4fe80cec7f7a249e90ec07b72a9af6f9a6538e468ff'
      serviceAccount: argocd-argocd-application-controller
      volumes:
        - name: argocd-repo-server-tls
          secret:
            secretName: argocd-repo-server-tls
            defaultMode: 420
            optional: true
        - name: argocd-operator-redis-tls
          secret:
            secretName: argocd-operator-redis-tls
            defaultMode: 420
            optional: true
      dnsPolicy: ClusterFirst
  serviceName: argocd-application-controller
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
---
kind: Service
apiVersion: v1
metadata:
  name: argocd-server
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8080
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: argocd-server
---
kind: Service
apiVersion: v1
metadata:
  name: argocd-redis
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: tcp-redis
      protocol: TCP
      port: 6379
      targetPort: 6379
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: argocd-redis
status:
  loadBalancer: {}
---
kind: Service
apiVersion: v1
metadata:
  name: argocd-repo-server
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: server
      protocol: TCP
      port: 8081
      targetPort: 8081
    - name: metrics
      protocol: TCP
      port: 8084
      targetPort: 8084
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: argocd-repo-server
status:
  loadBalancer: {}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: argocd-server
spec:
  host: argocd-server-own-argocd.apps-crc.testing
  to:
    kind: Service
    name: argocd-server
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: argocd-argocd-application-controller
secrets:
  - name: argocd-argocd-application-controller-dockercfg-bjdzs
imagePullSecrets:
  - name: argocd-argocd-application-controller-dockercfg-bjdzs
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: argocd-argocd-redis
secrets:
  - name: argocd-argocd-redis-dockercfg-kjsvz
imagePullSecrets:
  - name: argocd-argocd-redis-dockercfg-kjsvz
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: argocd-argocd-server
secrets:
  - name: argocd-argocd-server-dockercfg-kpkcp
imagePullSecrets:
  - name: argocd-argocd-server-dockercfg-kpkcp
---
kind: Secret
apiVersion: v1
metadata:
  name: argocd-argocd-application-controller-dockercfg-bjdzs
data:
  .dockercfg: 
type: kubernetes.io/dockercfg
---
kind: Secret
apiVersion: v1
metadata:
  name: argocd-argocd-redis-dockercfg-kjsvz
data:
  .dockercfg: 
type: kubernetes.io/dockercfg
---
kind: Secret
apiVersion: v1
metadata:
  name: argocd-argocd-server-dockercfg-kpkcp
data:
  .dockercfg: 
type: kubernetes.io/dockercfg
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: argocd-ssh-known-hosts-cm
data:
  ssh_known_hosts: |
    [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
    bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
    ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    [codessh.sbb.ch]:7999 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCpEG2NjlXSz42oLtU9QpZOGDGqnO+6ZMH2QZ5uZ+CPnsRG9nkb2okE79/IcTh6QhBj65YXwwZKdXlSzHZUKdzXDNanhtbTiLOq0yN7ABUM8cQ69kkvkevyN5tkTLB36SDMIHQoRlmpWciWyDIP3JGPbu35AtyL99vj7XlU5O7Vo13I8RmLiukTP6v9bRkWva7uXWtRLzZEdMB0ppne3TVIiSa/lzC5GZ0tekjLrYYtPsE7zqUZrECGYj1ShgEAIWC3rTAZJdIAPdgCRSTpTxYt+yhPEHnUA5Tyf8cdSV+HhJ88FoHzcFclNZyjvviVWjpabARMfPBS1yIquOpR2pT3
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: argocd-tls-certs-cm
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: argocd-gpg-keys-cm
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: argocd-cm
data:
  admin.enabled: 'true'
  application.resourceTrackingMethod: label
  statusbadge.enabled: 'false'
  resource.exclusions: ''
  ga.trackingid: ''
  repositories: ''
  ga.anonymizeusers: 'false'
  help.chatUrl: ''
  resource.customizations.health.tekton.dev_TaskRun: |
    hs = {
      status = "Progressing",
      message = "Tekton resource is running"
    }
    if obj.status ~= nil then
      if obj.status.conditions ~= nil then
        for i, condition in ipairs(obj.status.conditions) do
          if condition.type == "Succeeded" and condition.status == "False" then
            hs.status = "Degraded"
            hs.message = condition.message
            return hs
          end
          if condition.type == "Succeeded" and condition.status == "True" then
            hs.status = "Healthy"
            hs.message = condition.message
            return hs
          end
        end
      end
    end
    return hs
  resource.customizations.health.tekton.dev_PipelineRun: |
    hs = {
      status = "Progressing",
      message = "Tekton resource is running"
    }
    if obj.status ~= nil then
      if obj.status.conditions ~= nil then
        for i, condition in ipairs(obj.status.conditions) do
          if condition.type == "Succeeded" and condition.status == "False" then
            hs.status = "Degraded"
            hs.message = condition.message
            return hs
          end
          if condition.type == "Succeeded" and condition.status == "True" then
            hs.status = "Healthy"
            hs.message = condition.message
            return hs
          end
        end
      end
    end
    return hs
  url: 'https://argocd-server'
  resource.customizations.health.solace.broker.sbb.ch_Queue: |
    hs = {
      status = "Progressing",
      message = "New resources, not jet processed by operator"
    }
    if obj.status == nil then
        return hs
    end

    hs.message = obj.status.statusMsg

    if obj.status.status == "SYNCED" then
        hs.status = "Healthy"
        return hs
    elseif obj.status.status == "PROGRESSING" or obj.status.status == "DIRTY" then
        hs.status = "Progressing"
        return hs
    elseif obj.status.status == "FAILED" then
        hs.status = "Degraded"
        return hs
    end

    return hs
  help.chatText: ''
  kustomize.buildOptions: ''
  resource.inclusions: ''
  oidc.config: ''
  repository.credentials: ''
  users.anonymous.enabled: 'false'
  resource.customizations.health.solace.broker.sbb.ch_Broker: |
    hs = {
      status = "Progressing",
      message = "New resources, not jet processed by operator"
    }
    if obj.status == nil then
        return hs
    end

    hs.message = obj.status.statusMsg

    if obj.status.status == "SYNCED" then
        hs.status = "Healthy"
        return hs
    elseif obj.status.status == "PROGRESSING" or obj.status.status == "DIRTY" then
        hs.status = "Progressing"
        return hs
    elseif obj.status.status == "FAILED" then
        hs.status = "Degraded"
        return hs
    end

    return hs
  configManagementPlugins: ''
  application.instanceLabelKey: applications.argoproj.io/app-name

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: argocd-ca
data:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBjCCAe6gAwIBAgIIAeAK/7A+2acwDQYJKoZIhvcNAQELBQAwITEfMB0GA1UE
    AwwWYXJnb2NkLW9wZXJhdG9yQGFyZ29jZDAeFw0yNDA2MDExNjI4MThaFw0yNTA2
    MDExNjI4MThaMCExHzAdBgNVBAMMFmFyZ29jZC1vcGVyYXRvckBhcmdvY2QwggEi
    MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC80ClXBwhGVcggSZLx5rOtsvBX
    ksE2oDPBiFuhSlK4n//JIA+TdG5EaJp3azS+n91Z8Dix1VSwqDszKl+G8Ok5cm2s
    OSQCLpti8py9rR6W5Xxo/JhNS7k+lyexJz3ataO9bXl3LU4bQyqHQQSmyx+Bqh7s
    MR47DGX4NmEaH3du2/pwaDRq70vn32CWZHvoXA+i5lAwNLP+MtzvCWrTAKfkUEyg
    PkNakyJJvMKWYTpHLvei2nBmGZ1eSeV6J8pwWyCZM8HiaiNb8FDdIg54cC8w+yB+
    kKFarTxtDRw5/38ErvzqDZu6yJLddFawBpGYMTEy6ck8KgiRCJru1d+IE4uFAgMB
    AAGjQjBAMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBRkmhe9jc9+4lcZgnUh9ykiSyCAdzANBgkqhkiG9w0BAQsFAAOCAQEAPucw71e/
    ymu25WDom+RhJjN0BUFiadRc3WtvWjZXneUWkROWbaRRG9QCifQmQX3hZJbZKfiU
    WkCkX95/cpjgrlPzqd4ZoYGn6k8sBSskcS0hjJiI9At5IylP2ODSKQRSlUnLW0Km
    k5XnNZ1K+za50w6m7XJliJ/CCXnvlYJTpfBhnjcPwU3vyBCcb56RfuZw8e7rl9jJ
    6MtMQhu532Wze6ZGR3BMiJfGXPZOMZ097hgilVJB2o/M0HQOz7J6a6pYZ70nlaqZ
    TXQYMRZRfbh+STGS56g8hHkAkZFAPLVlb7y9r+V8uLXwf15R2kNmBShANlo7hwnm
    D8g/Ko4wehThzg==
    -----END CERTIFICATE-----
---
kind: Secret
apiVersion: v1
metadata:
  name: argocd-default-cluster-config
stringData:
  config: |
    {"tlsClientConfig":{"insecure":false}}
  name: in-cluster
  namespaces: demo,own-argocd
  server: https://kubernetes.default.svc
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: argocd-cluster
data:
  admin.password: ZjlxNThzTW0yR29GQmJJTnVhMXpudnhPUENpbHREUUs=
type: Opaque
---
kind: Secret
apiVersion: v1
metadata:
  name: argocd-ca
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lJQWVBSy83QSsyYWN3RFFZSktvWklodmNOQVFFTEJRQXdJVEVmTUIwR0ExVUUKQXd3V1lYSm5iMk5rTFc5d1pYSmhkRzl5UUdGeVoyOWpaREFlRncweU5EQTJNREV4TmpJNE1UaGFGdzB5TlRBMgpNREV4TmpJNE1UaGFNQ0V4SHpBZEJnTlZCQU1NRm1GeVoyOWpaQzF2Y0dWeVlYUnZja0JoY21kdlkyUXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzgwQ2xYQndoR1ZjZ2dTWkx4NXJPdHN2QlgKa3NFMm9EUEJpRnVoU2xLNG4vL0pJQStUZEc1RWFKcDNhelMrbjkxWjhEaXgxVlN3cURzektsK0c4T2s1Y20ycwpPU1FDTHB0aThweTlyUjZXNVh4by9KaE5TN2srbHlleEp6M2F0YU85YlhsM0xVNGJReXFIUVFTbXl4K0JxaDdzCk1SNDdER1g0Tm1FYUgzZHUyL3B3YURScTcwdm4zMkNXWkh2b1hBK2k1bEF3TkxQK010enZDV3JUQUtma1VFeWcKUGtOYWt5Skp2TUtXWVRwSEx2ZWkybkJtR1oxZVNlVjZKOHB3V3lDWk04SGlhaU5iOEZEZElnNTRjQzh3K3lCKwprS0ZhclR4dERSdzUvMzhFcnZ6cURadTZ5SkxkZEZhd0JwR1lNVEV5NmNrOEtnaVJDSnJ1MWQrSUU0dUZBZ01CCkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSa21oZTlqYzkrNGxjWmduVWg5eWtpU3lDQWR6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFQdWN3NzFlLwp5bXUyNVdEb20rUmhKak4wQlVGaWFkUmMzV3R2V2paWG5lVVdrUk9XYmFSUkc5UUNpZlFtUVgzaFpKYlpLZmlVCldrQ2tYOTUvY3BqZ3JsUHpxZDRab1lHbjZrOHNCU3NrY1MwaGpKaUk5QXQ1SXlsUDJPRFNLUVJTbFVuTFcwS20KazVYbk5aMUsremE1MHc2bTdYSmxpSi9DQ1hudmxZSlRwZkJobmpjUHdVM3Z5QkNjYjU2UmZ1Wnc4ZTdybDlqSgo2TXRNUWh1NTMyV3plNlpHUjNCTWlKZkdYUFpPTVowOTdoZ2lsVkpCMm8vTTBIUU96N0o2YTZwWVo3MG5sYXFaClRYUVlNUlpSZmJoK1NUR1M1Nmc4aEhrQWtaRkFQTFZsYjd5OXIrVjh1TFh3ZjE1UjJrTm1CU2hBTmxvN2h3bm0KRDhnL0tvNHdlaFRoemc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lJQWVBSy83QSsyYWN3RFFZSktvWklodmNOQVFFTEJRQXdJVEVmTUIwR0ExVUUKQXd3V1lYSm5iMk5rTFc5d1pYSmhkRzl5UUdGeVoyOWpaREFlRncweU5EQTJNREV4TmpJNE1UaGFGdzB5TlRBMgpNREV4TmpJNE1UaGFNQ0V4SHpBZEJnTlZCQU1NRm1GeVoyOWpaQzF2Y0dWeVlYUnZja0JoY21kdlkyUXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzgwQ2xYQndoR1ZjZ2dTWkx4NXJPdHN2QlgKa3NFMm9EUEJpRnVoU2xLNG4vL0pJQStUZEc1RWFKcDNhelMrbjkxWjhEaXgxVlN3cURzektsK0c4T2s1Y20ycwpPU1FDTHB0aThweTlyUjZXNVh4by9KaE5TN2srbHlleEp6M2F0YU85YlhsM0xVNGJReXFIUVFTbXl4K0JxaDdzCk1SNDdER1g0Tm1FYUgzZHUyL3B3YURScTcwdm4zMkNXWkh2b1hBK2k1bEF3TkxQK010enZDV3JUQUtma1VFeWcKUGtOYWt5Skp2TUtXWVRwSEx2ZWkybkJtR1oxZVNlVjZKOHB3V3lDWk04SGlhaU5iOEZEZElnNTRjQzh3K3lCKwprS0ZhclR4dERSdzUvMzhFcnZ6cURadTZ5SkxkZEZhd0JwR1lNVEV5NmNrOEtnaVJDSnJ1MWQrSUU0dUZBZ01CCkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSa21oZTlqYzkrNGxjWmduVWg5eWtpU3lDQWR6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFQdWN3NzFlLwp5bXUyNVdEb20rUmhKak4wQlVGaWFkUmMzV3R2V2paWG5lVVdrUk9XYmFSUkc5UUNpZlFtUVgzaFpKYlpLZmlVCldrQ2tYOTUvY3BqZ3JsUHpxZDRab1lHbjZrOHNCU3NrY1MwaGpKaUk5QXQ1SXlsUDJPRFNLUVJTbFVuTFcwS20KazVYbk5aMUsremE1MHc2bTdYSmxpSi9DQ1hudmxZSlRwZkJobmpjUHdVM3Z5QkNjYjU2UmZ1Wnc4ZTdybDlqSgo2TXRNUWh1NTMyV3plNlpHUjNCTWlKZkdYUFpPTVowOTdoZ2lsVkpCMm8vTTBIUU96N0o2YTZwWVo3MG5sYXFaClRYUVlNUlpSZmJoK1NUR1M1Nmc4aEhrQWtaRkFQTFZsYjd5OXIrVjh1TFh3ZjE1UjJrTm1CU2hBTmxvN2h3bm0KRDhnL0tvNHdlaFRoemc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdk5BcFZ3Y0lSbFhJSUVtUzhlYXpyYkx3VjVMQk5xQXp3WWhib1VwU3VKLy95U0FQCmszUnVSR2lhZDJzMHZwL2RXZkE0c2RWVXNLZzdNeXBmaHZEcE9YSnRyRGtrQWk2Yll2S2N2YTBlbHVWOGFQeVkKVFV1NVBwY25zU2M5MnJXanZXMTVkeTFPRzBNcWgwRUVwc3NmZ2FvZTdERWVPd3hsK0RaaEdoOTNidHY2Y0dnMAphdTlMNTk5Z2xtUjc2RndQb3VaUU1EU3ovakxjN3dscTB3Q241RkJNb0Q1RFdwTWlTYnpDbG1FNlJ5NzNvdHB3ClpobWRYa25sZWlmS2NGc2dtVFBCNG1valcvQlEzU0lPZUhBdk1Qc2dmcENoV3EwOGJRMGNPZjkvQks3ODZnMmIKdXNpUzNYUldzQWFSbURFeE11bkpQQ29Ja1FpYTd0WGZpQk9MaFFJREFRQUJBb0lCQVFDNlRFbjk3SnBsaTg1aQp6VFdJS1RHd2VaWmJVaG9DWkIrdEhYWUx0dUhYK1ViUWxDbktQRjl3Y0NXNUhyWjBRQmlQM1U2VGFRS2ZLOTc5CnBSbU1jN2dyVHBTWUVlbE5uZDhEeW82Tk9IdXVOOUNCWm5xQUNlOUZxcThuUktqclc3MnI4cENlM3J6cWVXTkYKQVFvdDZNMjFpcjNvSHE3TlpIWllhbzkwendkeEFUa0RnVDJQSFhxYWVXb1I4QVRlWEJoOTVNeE55em5QU3VpegpZN21Jek1ONVNBbDVoRFRCL0FJQkkwdFpTVWtlcFlHTWxNMmZsWDRJRDRpSWNPQ1J2ZUtrK25MQVBGTXZKc3I2CjVscjgvdmNxanhLdTVFNjZtSy9jL2docVBMd0hBS2FWdkhCd2hrekNBS2UwS0pIUDcwUnUrei93T3lZUnZ4N3AKcWkzTXZnSUJBb0dCQU11NDY5d0huSmFHT2ovc3BYQjRWVWZCN00yTkdkU1R4QXRUSjVkd2tZUEpVdVFxSmo3SAo4MDR6ZEk5Q2JyR0c1M21ib3YyRFl4Wmk3bTJGQXZ2cTJMS1NhUVdwbWdpOVpkNUZBSUZuSGc1ZFdlZitJTDJ0ClVnQTljcHdzOHMzNGlhK1pQc1pHcVEwN0FORXpvYzFXZFBXZTdRV2QwcUlnU1ZscWY5NUNIemZWQW9HQkFPMUQKMEJTTDRkTW5HYkVxbStUbVlQUXQ0akVDZUMyaVdJM0docWZwMWc1aTl4QVhpRHlMRldCL2FQNkxrMkk5S2tKQgpoN29nLzVJcjYxRlpxY3A5SjRQMnBxbWV4RThGajJGRFo1M1hHZDBESExmc2dRQllHV21FVlRhaXRWRXB6YVVsCm1KNmNXYzdqckVVVU1ZL2V5aDZDdWtwRmhjWVpzWW9pNlE2MHlnenhBb0dCQU1rOFRIZVhhVDFqTCt6dk5PanAKWk13eUtsbE5OU1BBSnhwTXRNSXFKd04zL2hKMTlEdDF4Y2dNbWVuZFpIeW1Wc2JRVDJ0K3VvVmxpa0hTN3dTcgprZ3lyQldUYmlOVnpTVW9LL1JuV0kyRnJJeUUvN1ZXUC9IMVNOWUZDQVVJbWJOTnhYQW45eUlYU0w5ZDIyakI4Clk2SXdyODhwZStROFlsZ2FGRjhYRDhGVkFvR0FZWkk4bE9aOWhMOFVvclg2RENUdGhCMEdZczg0S3RRVGhLSTYKcC96U3FYSHJWalBITTlhaWdOK0Vod0ZSSjlvdGNiZlBJQzBIek0zQTVPQnhvYkxjT0RtTGlqK2ZUVHZsSGNPQgpiZmlTUzBCSFpCK2ZZVXZaajNuN0xRKzJidDA1RTR3bGVqeWo5aC9NclUvRG5mMnBzdWhod2I5Ylp2OFQ4dEd1CmMvekhCcEVDZ1lCVG1YZGhCcWJBa0tqVUkrRWlUdjNCUmkzSkZlZU1QUWNYUHlSek1rNHpkNzd1RElWeDU1U1MKRUJBQkhPcmgrRmJ4YlJ6K0pBSmRKWE56UDRtTmdKaFpDNVRWNW5TUzc5c2gzVWoxTDRyZklxNEgxc05FNFRCWQpuWFl1WDRXVGNFMkd6a2JVUkMrKzlQZXR4T0c3QXZFWnVlR3RuZjBQQ1ZZSVZXVEUxR0wzdkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
type: kubernetes.io/tls
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: argocd-argocd-application-controller
subjects:
  - kind: ServiceAccount
    name: argocd-argocd-application-controller
    namespace: own-argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-argocd-application-controller
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: argocd-argocd-redis
subjects:
  - kind: ServiceAccount
    name: argocd-argocd-redis
    namespace: own-argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-argocd-redis
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: argocd-argocd-redis-ha
subjects:
  - kind: ServiceAccount
    name: argocd-argocd-redis-ha
    namespace: own-argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-argocd-redis-ha
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: argocd-argocd-server
subjects:
  - kind: ServiceAccount
    name: argocd-argocd-server
    namespace: own-argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-argocd-server
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: argocd-argocd-application-controller
subjects:
  - kind: ServiceAccount
    name: argocd-argocd-application-controller
    namespace: own-argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-argocd-application-controller
